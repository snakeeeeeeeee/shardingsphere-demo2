spring:
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://117.48.205.22:33006/playlist
        username: root
        password: 123456
    sharding:
      tables:
        user:
          actual-data-nodes: ds0.user_$->{0..1}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: user_$->{(id.hashCode()) % 2}
        playlist:
          actual-data-nodes: ds0.playlist_$->{0..1}
          table-trategy:
            standard:
              shardingColumn: playlist_id
              preciseAlgorithmClassName: com.example.demo.config.DemoPreciseShardingAlgorithm
              rangeAlgorithmClassName: com.example.demo.config.DemoRangeShardingAlgorithm
#            inline:
#              sharding-column: playlist_id
#              algorithm-expression: playlist_$->{(playlist_id.hashCode()) % 2}
          key-generator:
            column: test_id
            type: SNOWFLAKE
